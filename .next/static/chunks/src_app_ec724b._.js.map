{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Atida/Desktop/lessons/lesson13/NextProject-website/src/app/services/users.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport async function getUsers() {\r\n    try {\r\n        const response = await axios.get('https://dummyjson.com/users');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n        throw error;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;QACjC,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACV;AACJ"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Atida/Desktop/lessons/lesson13/NextProject-website/src/app/components/CardList.tsx"],"sourcesContent":["// \"use client\";\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getUsers } from '../services/users';\r\n\r\nasync function CardList () {\r\n    // const [users, setUsers] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     async function fetchData() {\r\n    //         try {\r\n    //             const data = await getUsers();\r\n    //             setUsers(data.users);\r\n    //         } catch (error) {\r\n    //             console.error(\"Failed to load users:\", error);\r\n    //         }\r\n    //     }\r\n    //     fetchData();\r\n    // }, []);\r\n    const data = await getUsers()\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users List</h1>\r\n            <ul>\r\n                {users.map((user: any) => (\r\n                    <li key={user.id}>{user.firstName} {user.lastName}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAGhB;;;AAEA,eAAe;IACX,0CAA0C;IAE1C,oBAAoB;IACpB,mCAAmC;IACnC,gBAAgB;IAChB,6CAA6C;IAC7C,oCAAoC;IACpC,4BAA4B;IAC5B,6DAA6D;IAC7D,YAAY;IACZ,QAAQ;IACR,mBAAmB;IACnB,UAAU;IACV,MAAM,OAAO,MAAM,CAAA,GAAA,kIAAA,CAAA,WAAQ,AAAD;IAE1B,qBACI,6LAAC;;0BACG,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;0BACI,MAAM,GAAG,CAAC,CAAC,qBACR,6LAAC;;4BAAkB,KAAK,SAAS;4BAAC;4BAAE,KAAK,QAAQ;;uBAAxC,KAAK,EAAE;;;;;;;;;;;;;;;;AAKpC;KA1Be;uCA4BA"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}