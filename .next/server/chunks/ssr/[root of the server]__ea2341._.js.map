{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/services/users.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport async function getUsers() {\r\n    try {\r\n        const response = await axios.get('https://dummyjson.com/users');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;QACjC,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACV;AACJ"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/stores/userStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { getUsers } from '../services/users';\r\n\r\ninterface UserStore {\r\n  users: UserModel[];\r\n  setUsers: (users: UserModel[]) => void;\r\n  addUser: (user: UserModel) => void;\r\n  fetchUsers: () => Promise<void>;\r\n  updateUser: (updatedUser: UserModel) => void;\r\n  deleteUser: (id: number) => void;\r\n  getUserById: (id: number) => UserModel | undefined;  \r\n\r\n}\r\n\r\nconst userStore = create<UserStore>((set,get) => ({\r\n  users: [],\r\n\r\n  setUsers: (users) => set(() => ({ users })),\r\n  \r\n  addUser: (user) =>\r\n    set((state) => ({\r\n      users: [...state.users, user]\r\n    })),\r\n\r\n  updateUser: (updatedUser) =>\r\n    set((state) => ({\r\n      users: state.users.map((user) =>\r\n        user.id === updatedUser.id ? updatedUser : user\r\n      ),\r\n    })),\r\n\r\n  deleteUser: (id) =>\r\n    set((state) => ({\r\n      users: state.users.filter((user) => user.id !== id),\r\n    })),\r\n\r\n  fetchUsers: async () => {\r\n    try {\r\n      const data = await getUsers();\r\n      set({ users: data.users });\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  },\r\n\r\n  getUserById: (id) => {\r\n    return get().users.find((user) => user.id === id);\r\n  },\r\n}));\r\nexport default userStore;"],"names":[],"mappings":";;;AACA;AADA;;;AAcA,MAAM,YAAY,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAa,CAAC,KAAI,MAAQ,CAAC;QAChD,OAAO,EAAE;QAET,UAAU,CAAC,QAAU,IAAI,IAAM,CAAC;oBAAE;gBAAM,CAAC;QAEzC,SAAS,CAAC,OACR,IAAI,CAAC,QAAU,CAAC;oBACd,OAAO;2BAAI,MAAM,KAAK;wBAAE;qBAAK;gBAC/B,CAAC;QAEH,YAAY,CAAC,cACX,IAAI,CAAC,QAAU,CAAC;oBACd,OAAO,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,OACtB,KAAK,EAAE,KAAK,YAAY,EAAE,GAAG,cAAc;gBAE/C,CAAC;QAEH,YAAY,CAAC,KACX,IAAI,CAAC,QAAU,CAAC;oBACd,OAAO,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;gBAClD,CAAC;QAEH,YAAY;YACV,IAAI;gBACF,MAAM,OAAO,MAAM,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;gBAC1B,IAAI;oBAAE,OAAO,KAAK,KAAK;gBAAC;YAC1B,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,yBAAyB;YACzC;QACF;QAEA,aAAa,CAAC;YACZ,OAAO,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;QAChD;IACF,CAAC;uCACc"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/pages/cardList/[userId]/page.tsx"],"sourcesContent":["import CardView from '@/app/components/CardView'\r\nimport React from 'react'\r\n\r\n async function page(props: UserParamsModel) {\r\n    const { userId } = await props.params\r\n    return (\r\n        <div>\r\n            <CardView userId={Number(userId)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default page\r\n"],"names":[],"mappings":";;;;AAAA;;;AAGC,eAAe,KAAK,KAAsB;IACvC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,MAAM,MAAM;IACrC,qBACI,8OAAC;kBACG,cAAA,8OAAC,qIAAA,CAAA,UAAQ;YAAC,QAAQ,OAAO;;;;;;;;;;;AAGrC;uCAEe"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}